/**
 * Created by ketangote on 11/23/17.
 */
import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';
import { CommonDataService } from '../../services/data/common.data.service';
export declare class AmexioTreeViewComponent implements AfterViewInit, OnInit, OnDestroy {
    element: ElementRef;
    dataService: CommonDataService;
    private cdf;
    private renderer;
    private componentLoaded;
    _data: any;
    data: any[];
    httpurl: string;
    httpmethod: string;
    datareader: string;
    displaykey: string;
    childarraykey: string;
    nodeClick: any;
    enablecheckbox: boolean;
    templates: any;
    enabledrag: boolean;
    enabledrop: boolean;
    acrosstree: boolean;
    badge: boolean;
    contextmenu: any[];
    parentRef: any;
    filtertreeflag: boolean;
    parentTmp: TemplateRef<any>;
    onTreeNodeChecked: any;
    onDrag: any;
    onDrop: any;
    dragover: any;
    dragData: any;
    nodeRightClick: any;
    rightClick: any;
    previousValue: any;
    responseData: any;
    isNode: boolean;
    flag: boolean;
    posixUp: boolean;
    rightClickNodeData: any;
    contextStyle: any;
    mouseLocation: {
        left: number;
        top: number;
    };
    globalClickListenFunc: () => void;
    globalTreeData: any[];
    constructor(element: ElementRef, dataService: CommonDataService, cdf: ChangeDetectorRef, renderer: Renderer2);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    updateComponent(): void;
    expandAll(node: any): void;
    expandAllCall(node: any): void;
    collapseAll(node: any): void;
    collapseAllCall(node: any): void;
    onClick(node: any): void;
    onArrowDown(event: any, data: any, node: any, index: any): void;
    onArrowUp(data: any, node: any, index: any): void;
    focusToInnerLastItem(node: any): void;
    focusTONextParent(node: any): void;
    splitID(id: any): any;
    setFocus(focuselement: any): void;
    onNodeClick(node: any): void;
    cloneMethod(cloneNode: any): void;
    generateIndex(data: any, parentId: number, rannumber: any): void;
    activateNode(data: any[], node: any): void;
    setData(httpResponse: any): void;
    setSelectedFlag(): void;
    setSelectedFlagInChild(node: any): void;
    emitCheckedData(checkedData: any): void;
    emitData(data: any): void;
    searchObject(object: any): void;
    setCheckedStatusFromParent(object: any): void;
    onTreeNodeCheck(data: any): void;
    onDragStart(dragData: any): void;
    allowDrop(dragOverData: any): void;
    noDragMethod(dragData: any, node: any, event: any): void;
    getDropNode(dragData: any, node: any, event: any): void;
    drop(dropData: any): void;
    setDropAcrosstree(dropData: any): void;
    setDropNodeTree(dropData: any): void;
    checkNode(dragData: any, dropData: any): void;
    removeNode(data: any): void;
    removeDragNode(treeData: any, dragNode: any): void;
    dragleave(event: any): void;
    getContextMenu(): void;
    resetFlag(): void;
    loadContextMenu(rightClickData: any): void;
    getListPosition(elementRef: any): boolean;
    rightClickDataEmit(Data: any): void;
    addListner(): void;
    removeListner(): void;
    ngOnDestroy(): void;
}
